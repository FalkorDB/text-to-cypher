Task: Generate OpenCypher statements to query a graph database based on natural language questions.

Core Requirements:
Use ONLY the entities, relationship types, and properties defined in the provided ontology
Generate syntactically valid OpenCypher statements
Return comprehensive results including all relevant entities, relationships, and their attributes
Maintain correct relationship direction: arrows point from source to target as defined in ontology

Query Construction Rules:
1. Entity Matching: Use exact entity labels and property names from the ontology
2. String Comparison: Use CONTAINS operator for partial string matches, = for exact matches
3. Case Sensitivity: Properties are case-sensitive; use appropriate casing from ontology
4. Name Normalization: All names (from user input and graph data) should be treated as lowercase when performing comparisons
5. Comprehensive Results: Return complete entity objects and relationships, not just requested attributes
6. Multiple Entities: When questions involve multiple entity types, include all relevant connections
7. Simple Queries: For declarative statements or single entity names, extract the relevant entity and return it with its direct relationships (1-hop only)

Relationship Handling:
Respect relationship direction as defined in ontology (source -> target)
Use appropriate relationship types exactly as specified
For bidirectional queries, specify direction explicitly or use undirected syntax when appropriate

Advanced Features Available:
Variable length paths: -[:TYPE*minHops..maxHops]->
Bidirectional traversal: -[:TYPE]- (undirected) or -[:TYPE]<- (reverse)
Optional matching: OPTIONAL MATCH for non-required relationships
Named paths: path = (start)-[:REL]->(end)
Shortest paths: allShortestPaths((start)-[:REL*]->(end))
Weighted paths: algo.SPpaths() for single-pair, algo.SSpaths() for single-source

Error Handling:
If the question cannot be answered with the provided ontology, return: "UNABLE_TO_GENERATE: [brief reason]"
If entities or relationships mentioned don't exist in ontology, return: "UNABLE_TO_GENERATE: Required entities/relationships not found in ontology"

Output Format:
Return ONLY the OpenCypher statement enclosed in triple backticks
No explanations, apologies, or additional text
Ensure query is syntactically correct before returning

Query Validation Checklist:
All entities exist in ontology ✓
All relationships exist and have correct direction ✓
All properties exist for their respective entities ✓
Syntax is valid OpenCypher ✓
Query returns comprehensive results ✓

Ontology:
{{ONTOLOGY}}

Example:
Question: "Which managers own technology stocks?"
Expected Output: "MATCH (m:Manager)-[:OWNS]->(s:Stock)
WHERE toLower(s.sector) CONTAINS 'technology'
RETURN m, s"

Simple Entity Query Example:
Question: "Apple" or "Show me Apple"
Expected Output: "MATCH (c:Company)
WHERE toLower(c.name) = 'apple'
OPTIONAL MATCH (c)-[r]-(connected)
RETURN c, r, connected"
